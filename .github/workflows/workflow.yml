name: Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      #- ".github/workflows/**"
      - "README.md"
      - "Makefile"
      - ".gitignore"
      - ".devcontainer/**"
      - ".vscode/**"
      - "resources/**"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run script to prepare test environment
        run: ls "${{ github.workspace }}"
        #- name: Build Pelican Website
        #  uses: rehanhaider/pelican-build-action@v0.1.10
        env:
          PELICAN_CONFIG_FILE: app/publishconf.py
          PELICAN_CONTENT_FOLDER: app/content
          ALGOLIA_ADMIN_API_KEY: "${{ secrets.ALGOLIA_ADMIN_API_KEY }}"
      - name: Upload the build files
        uses: actions/upload-artifact@v2
        with:
          name: build-output
          path: |
            output/
            .firebaserc
            firebase.json
          retention-days: 1
      - name: Upload the test files
        uses: actions/upload-artifact@v2
        with:
          name: test-input
          path: |
            tests/
            requirements.txt
          retention-days: 1
  test:
    name: Test
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download the build output
        uses: actions/download-artifact@v2
        with:
          name: build-output
      - name: Download the test input
        uses: actions/download-artifact@v2
        with:
          name: test-input
      - name: Run script to prepare test environment
        run: ./.github/scripts/prepare-test-env.sh
      - name: Run Tests
        run: pytest
  deploy:
    name: Deploy
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Download the Build
        uses: actions/download-artifact@v2
        with:
          name: build-output
      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_CLOUDBYTES_PROD }}"
          channelId: live
          projectId: cloudbytes-prod
